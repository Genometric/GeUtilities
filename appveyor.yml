# Common configuration for all branches
version: '6.2.{build}'
image: Visual Studio 2019

init:
  # Good practice, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true
install:
  - nuget restore
  - dotnet restore
  - choco install opencover.portable
  - choco install codecov
before_build:
    # We let choco to install the latest version of codecov;
    # therefore, to correctly set the path to the folder of 
    # the installed version, the following is what this script
    # does:
    # 1- Search the installation path of codecov for every version
    #    (using the `Get-ChildItem1).
    # 2- Append build path (i.e., `/build/netstandard1.0/CodeCoverage`)
    #    to the codecov to every item in the list returned in (1), AND
    #    separate every item in the list using ';' delimiter.
    # 3- Append the generated directories to `PATH`. 
    #
    # An alternative to this approach would be to pin the version 
    # codecov so its build path is always set to the pinned version.
    - {ps: "$env:PATH = @($env:PATH) + [string]::join(\"\\build\\netstandard1.0\\CodeCoverage\\;\", (Get-ChildItem -LiteralPath \"C:\\Users\\appveyor\\.nuget\\packages\\microsoft.codecoverage\\\" -Directory -Recurse).fullname)"}
build:
  verbosity: minimal
clone_depth: 1

build_script:
  - MSBuild.exe /t:Rebuild

test_script:
  - cmd: dotnet restore GeUtilities.Tests\GeUtilities.Tests.csproj --verbosity m
  - cmd: dotnet test GeUtilities.Tests\GeUtilities.Tests.csproj
  - ps: cd GeUtilities.Tests
  - OpenCover.Console.exe -register:"user" -target:"C:/Program Files/dotnet/dotnet.exe" -targetargs:"xunit -noshadow" -filter:"+[*]* -[GeUtilities.Tests*]*" -oldStyle -output:".\GeUtilities_coverage.xml"
  - ps: cd ..
after_test:
  - ps: |
      $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
      Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
on_finish :
  # any cleanup in here

deploy: off

# override common configuration for each branch
for:

# override settings for `master` branch
-
  branches:
    only:
      - master

  configuration: Release
  
  environment:
    codecovtoken:
      secure: grVzO2tsoeq7B3FFfRjyhirsmD11tXDcKoXOK6zjpqyOco2BSFbQ0J0T5qTZKsx7
  
  build_script:
    - MSBuild.exe /t:Rebuild
    
  after_test:
    - ps: |
        $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
        Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
        bash codecov.sh -f "GeUtilities.Tests/GeUtilities_coverage.xml" -t $env:codecovtoken
    - MSBuild.exe /t:Rebuild
    - ps: cd GeUtilities.Tests
    - OpenCover.Console.exe -register:"user" -target:"C:/Program Files/dotnet/dotnet.exe" -targetargs:"xunit -noshadow" -filter:"+[*]*" -oldStyle -output:"GeUtilities_coverage.xml"
    - ps: cd ..
  
  artifacts: 
    - path: GeUtilities/bin/Release/Genometric.GeUtilities*.nupkg  
      name: GeUtilities
    
  deploy:
    provider: NuGet
    api_key:
      secure: R9BDT6tjyjrRf/SNqhrjz3Bju8vUGEZ05qG6UAIF7Zmam2Wk8wjZgDMVyzRvY8Ae
    skip_symbols: false

# override settings for `rc` (release candidate) branch
# the only difference with the `master` branch is that this does NOT publish on NuGet.
-
  branches:
    only:
      - rc

  configuration: Release

  environment:
    codecovtoken:
      secure: grVzO2tsoeq7B3FFfRjyhirsmD11tXDcKoXOK6zjpqyOco2BSFbQ0J0T5qTZKsx7

  build_script:
    - MSBuild.exe /t:Rebuild
    
  after_test:
    - ps: |
        $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
        Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
        bash codecov.sh -f "GeUtilities.Tests/GeUtilities_coverage.xml" -t $env:codecovtoken
  
  artifacts: 
    - path: GeUtilities/bin/Release/Genometric.GeUtilities*.nupkg  
      name: GeUtilities

# override settings for `dev*` branches
-
  branches:
    only:
      - /dev*/
      
  configuration: Debug
  
  after_test:
    - ps: |
        $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
        Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
        bash codecov.sh -f "GeUtilities.Tests/GeUtilities_coverage.xml"
