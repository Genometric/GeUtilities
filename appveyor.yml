version: '2.0.{build}'
image: Visual Studio 2017
branches:
  only:
  - master
environment:
  sonar_cloud_token:
    secure: zx9FQl2yXcPb8X7A4BqN753h1TFSuHioq13TFRwQk04/1cSxEFaqR1j+UAuJhyT7
init:
  # Good practise, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true
install:
  - dotnet restore
build:
  verbosity: minimal
clone_depth: 1
build_script:
  - choco install "msbuild-sonarqube-runner" -y
  - MSBuild.SonarQube.Runner.exe begin /k:"geutilities" /o:"genometric" /d:"sonar.host.url=https://sonarcloud.io" /d:"sonar.login=%sonar_cloud_token%"
  - MSBuild.exe /t:Rebuild
  - MSBuild.SonarQube.Runner.exe end /d:"sonar.login=%sonar_cloud_token%"
test_script:
  # restore packages for our unit tests
  - cmd: dotnet restore GeUtilities.Tests\GeUtilities.Tests.csproj --verbosity m
  - cmd: dotnet test GeUtilities.Tests\GeUtilities.Tests.csproj
  - ps: cd GeUtilities.Tests
  - OpenCover.Console.exe -register:"user" -target:"C:/Program Files/dotnet/dotnet.exe" -targetargs:"xunit -noshadow" -filter:"+[*]* -[GeUtilities.Tests*]*" -oldStyle -output:".\GeUtilities_coverage.xml"
  - ps: cd ..
after_test:
  - ps: |
      $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
      Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
      bash codecov.sh -f "GeUtilities.Tests/GeUtilities_coverage.xml" -t 9c893f36-91fa-4166-945a-c6433b0ac7be
on_finish :
  # any cleanup in here
deploy: off
